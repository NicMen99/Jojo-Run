target_sources(${TARGET}
        PRIVATE
        AbsGameState.h
        AbsGameState.cpp
        Background.h
        Background.cpp
        Block.h
        Block.cpp
        Bullet.h
        EmeraldEnemy.h
        EmeraldEnemy.cpp
        Enemy.h
        Enemy.cpp
        Emerald.h
        Emerald.cpp
        InputManager.h
        InputManager.cpp
        Factory.h
        Factory.cpp
        Fire.h
        Fire.cpp
        FireEnemy.h
        FireEnemy.cpp
        FireWall.h
        FireWall.cpp
        Game.h
        Game.cpp
        GameConfig.h
        GameConfig.cpp
        GameObject.h
        GameObject.cpp
        GameOverState.h
        GameOverState.cpp
        GameResourceManager.h
        GameResourceManager.cpp
        GameScene.h
        GameScene.cpp
        GameStateMachine.h
        GameStateMachine.cpp
        GameStats.h
        GameStats.cpp
        HamonEnemy.h
        HamonEnemy.cpp
        Hero.h
        Hero.cpp
        InitState.h
        InitState.cpp
        ImageWidget.h
        ImageWidget.cpp
        Knife.h
        Knife.cpp
        main.cpp
        Obstacle.h
        Observer.h
        Platform.h
        Platform.cpp
        PlayState.h
        PlayState.cpp
        PowerUp.h
        Score.h
        Score.cpp
        ScoreHUD.h
        ScoreHUD.cpp
        ShapeWidget.h
        ShapeWidget.cpp
        Shield.h
        Shield.cpp
        Subject.h
        TextWidget.h
        TextWidget.cpp
        Weapon.h
        Weapon.cpp
        Widget.h
        Widget.cpp)

target_include_directories(${TARGET}
        PUBLIC
        ${CMAKE_SOURCE_DIR}/Src
        ${SFML_INCLUDE_DIR}
#        ${OPENGL_INCLUDE_DIRS}
#        ${GLUT_INCLUDE_DIRS}
#        ${GLEW_INCLUDE_DIRS}
        )

target_link_libraries(
        ${TARGET}
        ${SFML_AUDIO_LIBRARY_DYNAMIC_RELEASE}
        ${SFML_GRAPHICS_LIBRARY_DYNAMIC_RELEASE}
        ${SFML_WINDOW_LIBRARY_DYNAMIC_RELEASE}
        ${SFML_SYSTEM_LIBRARY_DYNAMIC_RELEASE}
        ${SFML_NETWORK_LIBRARY_DYNAMIC_RELEASE}
#        ${OPENGL_LIBRARIES}
#        ${GLUT_LIBRARIES}
#        ${GLEW_LIBRARIES}
)
